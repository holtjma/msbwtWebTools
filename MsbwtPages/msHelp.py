'''
Author: James Holt
Contact: holtjma@cs.unc.edu
This file contains the contents for the "Help" page.  It's basically an abbreviated wiki describing each function.
'''

import markup
from markup import oneliner as element

def GET():
    '''
    This is the main page everything else springs off of
    '''
    panel = markup.page()
    
    panel.div(style="padding:50px 150px")
    
    panel.h2(element.a('K-mer search', href='./msCompare'))
    panel.p('''This tool enables a search of one or more datasets for a particular k-length string (a <b>k-mer</b>).
The k-mer and datasets to query are selected by the user.  Datasets are selected by clicking on their checkbox from a list.
The k-mer is chosen by the user, valid characters are "$ACGNT".  Given these values, the server accesses the BWT for each dataset
and returns a list of reads from each dataset that contains the k-mer of interest.  At the top of the results page is summary
of the number of times the k-mer (both forward and reverse-complemented) was found in each dataset.  This summary can be downloaded
in CSV format by clicking on the "Download Summary" link.
''')
    panel.p('''For each dataset selected, the reads are then aligned such that
the k-mer is located visually in the center.  When the k-mer is found exactly in a read, it is colored <span style="color: red; font-weight: bold;">red</span>.
When the reverse-complemented k-mer is found exactly in a read, it is colored in <span style="color: blue; font-weight: bold;">blue</span>.  When a reverse-complement
read is found, it is reverse-complemented in its entirety for visualization with the other reads.
''')
    panel.p('''Using all the retrieved reads, a consensus is generated by majority vote at each position.  The k-mer provided by the user
is always conserved in the consensus.  The consensus is shown in <span style="color: green; font-weight: bold;">green</span> at the bottom of each visualized set of
reads.  Additionally, bases from the reads are highlighted in <span style="background-color: yellow; font-weight: bold;">yellow</span> if they do not match the calculated consensus sequence.
''')
    
    panel.h2(element.a('Allele search', href='./msAllele'))
    panel.p('''This tool enables a search of one or more datasets for a particular k-length string (a <b>k-mer</b>).
The k-mer and datasets to query are selected by the user.  Datasets are selected by clicking on their checkbox from a list.
The k-mer is chosen by the user, valid characters are "$ACGNT".  Given these values, the server accesses the BWT for each dataset
and returns a list of reads from each dataset that contains the k-mer of interest.
''')
    panel.p('''For each dataset, the reads are aligned to each other to detect one or more consensus sequences within the dataset.
For each consensus, all reads that exactly match the consensus are grouped together and displayed visually such that
the k-mer is located visually in the center.  When the k-mer is found exactly in a read, it is colored <span style="color: red; font-weight: bold;">red</span>.
When the reverse-complemented k-mer is found exactly in a read, it is colored in <span style="color: blue; font-weight: bold;">blue</span>.  When a reverse-complement
read is found, it is reverse-complemented in its entirety for visualization with the other reads.  Finally the consensus is shown in
<span style="color: green; font-weight: bold;">green</span> at the bottom of each group of reads.  The finally category represents the "leftover" consensus.
Bases in the leftover reads that do not match the leftover consensus are highlighted in <span style="background-color: yellow; font-weight: bold;">yellow</span>.
''')
    
    '''
    #TODO: this tools requires a LOT more work than the others since it is reference dependent; maybe added in a future release
    panel.h3('Reference-based tools:')
    panel.ul()
    panel.li()
    panel.a('Reference pileup', href='./msPileup')
    panel.add(' - Searches a single dataset for evidence of a gene or genomic region.')
    panel.add(' Options for reference correction provided.')
    panel.ul.close()
    panel.br()
    '''
    
    panel.h2(element.a('Targeted Assembler', href='./msTarget'))
    panel.p('''This tool enables interactive, targeted genomic assembly using the BWT as an implicity de Bruijn graph.  The user selects
a dataset to query and an initial k-length string (a <b>k-mer</b>) that is the starting point for assembly.  Additionally, the user inputs
a threshold that is the minimum number of times a k-mer has to occur for it to be considered a valid path.  When the user clicks "Begin new graph",
a single grey node representing the initial k-mer will appear within the graph visualization.
''')
    panel.p('''<span style="color: grey; font-weight: bold;">Grey</span> nodes in the graph represent unexplored nodes.  When the user clicks on an unexplored node,
the server begins an automated traversal of the de Bruijn graph represented by the BWT using the k-mer and threshold that node represents.
Given a k-mer, the server drops the first character to create a (k-1)-mer.  This (k-1)-mer can be extended in one of four different ways: A, C, G, or T.
For large k-mers, there is generally only one of those four options that beats the threshold.  If only one extension exists, the server will
add that base to the node, and repeat the process.  In this way, it is assembling a unambiguous "path" through the dataset.  However, if two or
more extensions are possible, the server will stop and return the unambiguous path.  Then each possible extensions will be visually
displayed as a new grey node with an edge from the previous node that contains both the one-base extension and the k-mer count for that one-base extension.
The one <span style="color: green; font-weight: bold;">green</span> node in the graph represents the initial k-mer node.
A <span style="color: red; font-weight: bold;">red</span> node in the graph represents a path where all possible extensions
has k-mer counts below the input threshold.
''')
    panel.p('''For each discovered node, a summary is stored in a table below the graph.  This summary includes the length of the path represented
by the node, any children IDs for the node, the full sequence for that path, and the k-mer counts (both forward and reverse-complemented) shown
for the entirety of the path in a 2D plot.  This plot has the position in the path along the x-axis and the counts located on the y-axis.
''')
    panel.p('''As a final note, the user can assemble the sequence from multiple nodes using the "Enable connector mode" button below the graph.
This will open a new panel where the user can repeated select connected nodes to form a path through the graph.  As nodes are selected, the sequences
represented by the nodes are joined together into a single sequence in FASTA format.  The user can then copy this sequence into another file for
long-term storage.
''')
    
    panel.h2(element.a('Mass Query', href='./msMassQuery'))
    panel.p('''This tool enables the search for one or more k-mers in a single sample.  The user selects a dataset to query and provides a delimited
text input.  This input can be manually typed or uploaded in CSV (comma-separated) or TSV (tab-separated) file formats.  The user also must provide
parsing information such as whether a header line is present and the column with the queries.  Finally, the user has the option of reporting forward
counts, reverse-complemented counts, or both.
''')
    panel.p(''' Once everything is input, click "Execute Batch Query" to begin.  This triggers a series of queries to the server in regards to the
requested information.  The status of the queries along with any error messages are shown in a console-like output window.  The results are written
in the same CSV or TSV format provided by the user.  Any columns that were in the original input are preserved.  A new column for the forward and/or reverse-complement
counts is added to the output at the end.  This output can be copied from the window or downloaded via the "Download Output" link below the output table.
''')
    
    panel.h2(element.a('Batch Query', href='./msBatchQuery'))
    panel.p('''This tool enables the search for one or more k-mers in multiple samples.  The user selects one or more datasets to query and provides
a delimited text input.  This input can be manually typed or uploaded in CSV (comma-separated) or TSV (tab-separated) file formats.  The user also must
provide parsing information such as whether a header line is present, the column with query labels, and the column with the k-mer queries.  Finally,
the user has the option of reporting forward counts, reverse-complemented counts, or both.
''')
    panel.p('''Once everything is input, click "Execute Batch Query" to begin.  This triggers a series of queries to the server in regards to the
requested information.  The status of the queries along with any error messages are shown in a console-like output window.  The results are written
in the same CSV or TSV format provided by the user.  The output is a two-dimensional table where rows are datasets and columns are queries.  Each cell
contains a count for the k-mer in the particular dataset, with forward and reverse-complements occupying different, adjacent cells in the table.
This output can be copied from the window or downloaded via the "Download Output" link below the output table.
''')
    
    panel.div.close()
    return panel